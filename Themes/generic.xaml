<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:DateControls="clr-namespace:Microsoft.Samples.DateControls"
                    xmlns:customControls="clr-namespace:Microsoft.Samples.CustomControls"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="PresentationOptions"
                    xmlns:Loc="clr-namespace:SongPresenter.Resources"
                    xml:lang="en-US"
                    >

    <PathGeometry x:Key="geometry" Figures="M0,0 4.5,4 9,0 5.5,0 4.5,1 3.5,0z"/>

    <!-- Month Calendar -->
    <LinearGradientBrush x:Key="MonthCalendarButtonFillNormal" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFE1EAFE" Offset="0"/>
            <GradientStop Color="#FFC3D3FD" Offset="0.3"/>
            <GradientStop Color="#FFC3D3FD" Offset="0.6"/>
            <GradientStop Color="#FFBBCDF9" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MonthCalendarButtonFillHover" StartPoint="0, 0" EndPoint="1, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFD6E7FF" Offset="0"/>
            <GradientStop Color="#FFD6E7FF" Offset="0.6"/>
            <GradientStop Color="#FFB9DAFB" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MonthCalendarButtonFillPressed" StartPoint="0, 0" EndPoint="1, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF93A8D9" Offset="0"/>
            <GradientStop Color="#FFA5BDFB" Offset="0.3"/>
            <GradientStop Color="#FFA5BDFB" Offset="0.7"/>
            <GradientStop Color="#FFD2DEEB" Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MonthCalendarButtonFillDisabled" StartPoint="0, 0" EndPoint="1, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF7F7F7" Offset="0"/>
            <GradientStop Color="#FFF0F0F0" Offset="0.3"/>
            <GradientStop Color="#FFECECEC" Offset="0.6"/>
            <GradientStop Color="#FFE3E3E3" Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Pen x:Key="MonthCalendarButtonInnerBorderNormal" Brush="#FFBBCDF9" Thickness="1"/>
    <Pen x:Key="MonthCalendarButtonInnerBorderHover" Brush="#FF98B1E4" Thickness="1"/>
    <Pen x:Key="MonthCalendarButtonInnerBorderPressed" Brush="#FF838FDA" Thickness="1"/>
    <Pen x:Key="MonthCalendarButtonInnerBorderDisabled" Brush="#FFE8E8DF" Thickness="1"/>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DateControls:MonthCalendar},ResourceId=PreviousButtonStyleKey}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Background" Value="{StaticResource MonthCalendarButtonFillNormal}" />
        <Setter Property="Foreground" Value="#FF4D6185"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DateControls:MonthCalendar},ResourceId=NextButtonStyleKey}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Width" Value="16" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Background" Value="{StaticResource MonthCalendarButtonFillNormal}" />
        <Setter Property="Foreground" Value="#FF4D6185"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
    </Style>

    <!--MonthCalendar Group Style-->
    <DateControls:WeekNumberConverter x:Key="MonthCalendarWeekNumberConverter" />
    <DateControls:DayHeaderConverter x:Key="MonthCalendarDayHeaderConverter" />
    <DateControls:AbbreviatedDayNameConverter x:Key="MonthCalendarAbbreviatedDayNameConverter" />
    <DateControls:MonthYearHeaderConverter x:Key="MonthCalendarMonthYearHeaderConverter" />




    <Style x:Key="{x:Type DateControls:MonthCalendar}" TargetType="{x:Type DateControls:MonthCalendar}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MessageFontFamilyKey}}" />
        <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MessageFontSizeKey}}" />
        <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MessageFontStyleKey}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MessageFontWeightKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="FocusManager.IsFocusScope" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DateControls:MonthCalendar}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                        <ScrollViewer Focusable="false">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid x:Name="Title">
                                    <DateControls:MonthCalendarTitle x:Name="TitleHost" DataContext="{TemplateBinding VisibleMonth}" Style="{TemplateBinding TitleStyle}"/>
                                    <RepeatButton x:Name="PART_PreviousButton" Command="DateControls:MonthCalendar.PreviousCommand"
                      Margin="7 5 0 0" HorizontalAlignment="Left" >
                                        <Viewbox>
                                            <Path Data="{StaticResource geometry}" Fill="Black">
                                                <Path.LayoutTransform>
                                                    <RotateTransform Angle="90"/>
                                                </Path.LayoutTransform>
                                            </Path>
                                        </Viewbox>
                                    </RepeatButton>
                                    <RepeatButton x:Name="PART_NextButton" Command="DateControls:MonthCalendar.NextCommand"
                      Margin="0 5 7 0" HorizontalAlignment="Right">
                                        <Viewbox>
                                            <Path Data="{StaticResource geometry}" Fill="Black">
                                                <Path.LayoutTransform>
                                                    <RotateTransform Angle="-90"/>
                                                </Path.LayoutTransform>
                                            </Path>
                                        </Viewbox>
                                    </RepeatButton>
                                </Grid>
                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid x:Name="DayHeaders" Grid.Column="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <DateControls:MonthCalendarDayHeader Grid.Column="0" Style="{TemplateBinding DayHeaderStyle}"
                                    DataContext="{Binding Path=FirstDayOfWeek,Mode=OneWay,Converter={StaticResource MonthCalendarDayHeaderConverter},ConverterParameter=0,RelativeSource={RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}}"/>
                                        <DateControls:MonthCalendarDayHeader Grid.Column="1" Style="{TemplateBinding DayHeaderStyle}"
                                    DataContext="{Binding Path=FirstDayOfWeek,Mode=OneWay,Converter={StaticResource MonthCalendarDayHeaderConverter},ConverterParameter=1, RelativeSource={RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}}"/>
                                        <DateControls:MonthCalendarDayHeader Grid.Column="2" Style="{TemplateBinding DayHeaderStyle}"
                                    DataContext="{Binding Path=FirstDayOfWeek,Mode=OneWay,Converter={StaticResource MonthCalendarDayHeaderConverter},ConverterParameter=2, RelativeSource={RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}}"/>
                                        <DateControls:MonthCalendarDayHeader Grid.Column="3" Style="{TemplateBinding DayHeaderStyle}"
                                    DataContext="{Binding Path=FirstDayOfWeek,Mode=OneWay,Converter={StaticResource MonthCalendarDayHeaderConverter},ConverterParameter=3, RelativeSource={RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}}"/>
                                        <DateControls:MonthCalendarDayHeader Grid.Column="4" Style="{TemplateBinding DayHeaderStyle}"
                                    DataContext="{Binding Path=FirstDayOfWeek,Mode=OneWay,Converter={StaticResource MonthCalendarDayHeaderConverter},ConverterParameter=4, RelativeSource={RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}}"/>
                                        <DateControls:MonthCalendarDayHeader Grid.Column="5" Style="{TemplateBinding DayHeaderStyle}"
                                    DataContext="{Binding Path=FirstDayOfWeek,Mode=OneWay,Converter={StaticResource MonthCalendarDayHeaderConverter},ConverterParameter=5, RelativeSource={RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}}"/>
                                        <DateControls:MonthCalendarDayHeader Grid.Column="6" Style="{TemplateBinding DayHeaderStyle}"
                                    DataContext="{Binding Path=FirstDayOfWeek,Mode=OneWay,Converter={StaticResource MonthCalendarDayHeaderConverter},ConverterParameter=6, RelativeSource={RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}}"/>
                                    </Grid>
                                    <Rectangle x:Name="DayHeadersSplitLine" Grid.Column="1" Fill="Black" Height="1" VerticalAlignment="Bottom" Margin="2,0,2,0"/>
                                    <Grid x:Name="WeekNumbers" Grid.Row="1" MinWidth="20" Visibility="Collapsed" >
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <DateControls:MonthCalendarWeekNumber Grid.Row="0" Style="{TemplateBinding WeekNumberStyle}">
                                            <Control.DataContext>
                                                <MultiBinding Mode="OneWay" Converter="{StaticResource MonthCalendarWeekNumberConverter}" ConverterParameter="0">
                                                    <Binding Path="FirstDayOfWeek" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                    <Binding Path="VisibleMonth" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                </MultiBinding>
                                            </Control.DataContext>
                                        </DateControls:MonthCalendarWeekNumber>
                                        <DateControls:MonthCalendarWeekNumber Grid.Row="1" Style="{TemplateBinding WeekNumberStyle}">
                                            <Control.DataContext>
                                                <MultiBinding Mode="OneWay" Converter="{StaticResource MonthCalendarWeekNumberConverter}" ConverterParameter="1">
                                                    <Binding Path="FirstDayOfWeek" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                    <Binding Path="VisibleMonth" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                </MultiBinding>
                                            </Control.DataContext>
                                        </DateControls:MonthCalendarWeekNumber>
                                        <DateControls:MonthCalendarWeekNumber Grid.Row="2" Style="{TemplateBinding WeekNumberStyle}">
                                            <Control.DataContext>
                                                <MultiBinding Mode="OneWay" Converter="{StaticResource MonthCalendarWeekNumberConverter}" ConverterParameter="2">
                                                    <Binding Path="FirstDayOfWeek" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                    <Binding Path="VisibleMonth" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                </MultiBinding>
                                            </Control.DataContext>
                                        </DateControls:MonthCalendarWeekNumber>
                                        <DateControls:MonthCalendarWeekNumber Grid.Row="3" Style="{TemplateBinding WeekNumberStyle}">
                                            <Control.DataContext>
                                                <MultiBinding Mode="OneWay" Converter="{StaticResource MonthCalendarWeekNumberConverter}" ConverterParameter="3">
                                                    <Binding Path="FirstDayOfWeek" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                    <Binding Path="VisibleMonth" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                </MultiBinding>
                                            </Control.DataContext>
                                        </DateControls:MonthCalendarWeekNumber>
                                        <DateControls:MonthCalendarWeekNumber Grid.Row="4" Style="{TemplateBinding WeekNumberStyle}">
                                            <Control.DataContext>
                                                <MultiBinding Mode="OneWay" Converter="{StaticResource MonthCalendarWeekNumberConverter}" ConverterParameter="4">
                                                    <Binding Path="FirstDayOfWeek" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                    <Binding Path="VisibleMonth" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                </MultiBinding>
                                            </Control.DataContext>
                                        </DateControls:MonthCalendarWeekNumber>
                                        <DateControls:MonthCalendarWeekNumber Grid.Row="5" Style="{TemplateBinding WeekNumberStyle}">
                                            <Control.DataContext>
                                                <MultiBinding Mode="OneWay" Converter="{StaticResource MonthCalendarWeekNumberConverter}" ConverterParameter="5">
                                                    <Binding Path="FirstDayOfWeek" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                    <Binding Path="VisibleMonth" RelativeSource="{RelativeSource AncestorType={x:Type DateControls:MonthCalendar}}"/>
                                                </MultiBinding>
                                            </Control.DataContext>
                                        </DateControls:MonthCalendarWeekNumber>
                                    </Grid>
                                    <Rectangle x:Name="WeekNumbersSplitLine" Grid.Row="1" Fill="Black" Width="1" HorizontalAlignment="Right" Margin="0,2,0,2" Visibility="Collapsed"/>
                                    <DateControls:MonthCalendarContainer x:Name="PART_VisibleDaysHost" 
                      Grid.Row="1" Grid.Column="1"
                      ScrollViewer.HorizontalScrollBarVisibility="Hidden" 
                      ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                      BorderThickness="0" SelectionMode="Extended" IsTextSearchEnabled="false" 
                      ItemContainerStyle="{TemplateBinding DayContainerStyle}" ItemContainerStyleSelector="{TemplateBinding DayContainerStyleSelector}" 
                      Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Padding="{TemplateBinding Padding}">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <UniformGrid Columns="7" Rows="6" />
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                    </DateControls:MonthCalendarContainer>
                                </Grid>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ShowsTitle" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Title"/>
                        </Trigger>
                        <Trigger Property="ShowsDayHeaders" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="DayHeaders"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="DayHeadersSplitLine"/>
                        </Trigger>
                        <Trigger Property="ShowsWeekNumbers" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="WeekNumbers"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="WeekNumbersSplitLine"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type DateControls:MonthCalendarItem}" TargetType="{x:Type DateControls:MonthCalendarItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4,1,4,1" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DateControls:MonthCalendarItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                     Value="true">
                            <Setter TargetName="Bd"
                      Property="Background"
                      Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                           Value="true"/>
                                <Condition Property="Selector.IsSelectionActive"
                           Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                      Property="Background"
                      Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsOtherMonth}" Value="true">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelectable}" Value="false">
                <Setter Property="IsEnabled" Value="false"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding IsToday}" Value="true">
                <Setter Property="BorderBrush" Value="Red"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type DateControls:MonthCalendarTitle}" TargetType="{x:Type DateControls:MonthCalendarTitle}">
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DateControls:MonthCalendarTitle}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <TextBlock Text="{Binding Converter={StaticResource MonthCalendarMonthYearHeaderConverter}}" 
                FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type DateControls:MonthCalendarDayHeader}" TargetType="{x:Type DateControls:MonthCalendarDayHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4, 1, 4, 1" />
        <Setter Property="Foreground" Value="#FF0054E3"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DateControls:MonthCalendarDayHeader}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <TextBlock Text="{Binding Converter={StaticResource MonthCalendarAbbreviatedDayNameConverter}}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type DateControls:MonthCalendarWeekNumber}" TargetType="{x:Type DateControls:MonthCalendarWeekNumber}">
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="4, 1, 4, 1" />
        <Setter Property="Foreground" Value="#FF0054E3" />
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DateControls:MonthCalendarWeekNumber}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <TextBlock Text="{Binding}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DatePicker -->

    <SolidColorBrush x:Key="ListBorder" Color="#FF7F9DB9"/>

    <Style x:Key="DatePickerFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="4,4,21,4" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ScrollBarButtonFillNormal" StartPoint="0,0" EndPoint="1,1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFE1EAFE" Offset="0"/>
            <GradientStop Color="#FFC3D3FD" Offset="0.3"/>
            <GradientStop Color="#FFC3D3FD" Offset="0.6"/>
            <GradientStop Color="#FFBBCDF9" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ScrollBarButtonFillHover" StartPoint="0, 0" EndPoint="1, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFD6E7FF" Offset="0"/>
            <GradientStop Color="#FFD6E7FF" Offset="0.6"/>
            <GradientStop Color="#FFB9DAFB" Offset="1"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ScrollBarButtonFillPressed" StartPoint="0, 0" EndPoint="1, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FF93A8D9" Offset="0"/>
            <GradientStop Color="#FFA5BDFB" Offset="0.3"/>
            <GradientStop Color="#FFA5BDFB" Offset="0.7"/>
            <GradientStop Color="#FFD2DEEB" Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ScrollBarButtonFillDisabled" StartPoint="0, 0" EndPoint="1, 1">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="#FFF7F7F7" Offset="0"/>
            <GradientStop Color="#FFF0F0F0" Offset="0.3"/>
            <GradientStop Color="#FFECECEC" Offset="0.6"/>
            <GradientStop Color="#FFE3E3E3" Offset="1.0"/>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>
    <Pen x:Key="ScrollBarButtonOuterBorder" Brush="White" Thickness="1"/>
    <Pen x:Key="ScrollBarButtonInnerBorderNormal" Brush="#FFBBCDF9" Thickness="1"/>
    <Pen x:Key="ScrollBarButtonInnerBorderHover" Brush="#FF98B1E4" Thickness="1"/>
    <Pen x:Key="ScrollBarButtonInnerBorderPressed" Brush="#FF838FDA" Thickness="1"/>
    <Pen x:Key="ScrollBarButtonInnerBorderDisabled" Brush="#FFE8E8DF" Thickness="1"/>

    <Style x:Key="DatePickerEditableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden"
                        Background="{TemplateBinding Background}">
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="fakeButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- color picker -->
    <DrawingBrush 
    x:Key="CheckerBrush"
    Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0 100,100" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0 50,50" />
                            <RectangleGeometry Rect="50,50 50,50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <LinearGradientBrush x:Key="GlassBrush" StartPoint="0,0" EndPoint="1,1" Opacity="0.75">
        <LinearGradientBrush.GradientStops>
            <GradientStop Color="WhiteSmoke" Offset="0.2" />
            <GradientStop Color="Transparent" Offset="0.4" />
            <GradientStop Color="WhiteSmoke" Offset="0.5" />
            <GradientStop Color="Transparent" Offset="0.75" />
            <GradientStop Color="WhiteSmoke" Offset="0.9" />
            <GradientStop Color="Transparent" Offset="1" />
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <GeometryGroup x:Key="FancyColorMarkerGeometry">
        <EllipseGeometry RadiusX="8" RadiusY="8"  />
        <EllipseGeometry RadiusX="4" RadiusY="4"  />
    </GeometryGroup>


    <!-- Spectrum Slider Styles -->
    <Style x:Key="SliderRepeatButtonStyle"
         TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
            Value="true"/>
        <Setter Property="IsTabStop"
            Value="false"/>
        <Setter Property="Focusable"
            Value="false"/>
        <Setter Property="Background"
            Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style 
     x:Key="{x:Type customControls:ColorThumb}" 
     TargetType="{x:Type customControls:ColorThumb}">

        <Setter Property="PointerOutlineBrush"
      Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
        <Setter Property="PointerOutlineThickness"
      Value="2" />
        <Setter Property="Foreground" Value="{x:Null}"/>
        <Setter Property="ThumbColor" Value="Transparent" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Height" Value="5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:ColorThumb}">

                    <Border Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Polygon
                Name="arrow"
                Points="100,20 80,50 100,80"
                Stretch="Fill"
                Stroke="{TemplateBinding PointerOutlineBrush}" 
                StrokeThickness="{TemplateBinding PointerOutlineThickness}">
                                <Polygon.Fill>
                                    <SolidColorBrush 
                    Color="{Binding ThumbColor, RelativeSource={RelativeSource TemplatedParent}}"  />
                                </Polygon.Fill>
                            </Polygon>
                            <Polygon
                Name="glassArrow" 
                Points="100,20 80,50 100,80"
                Stretch="Fill"
                Stroke="{TemplateBinding PointerOutlineBrush}" 
                StrokeThickness="{TemplateBinding PointerOutlineThickness}"
                Fill="{StaticResource GlassBrush}">
                            </Polygon>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsDragging" Value="False">
                            <Setter Property="BitmapEffect" TargetName="glassArrow">
                                <Setter.Value>
                                    <BitmapEffectGroup>
                                        <BevelBitmapEffect BevelWidth="5" Relief="0.5"  />
                                        <DropShadowBitmapEffect />
                                    </BitmapEffectGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="VerticalSliderLeftThumbStyle"
         TargetType="{x:Type Thumb}">
        <Setter Property="Foreground"
            Value="{x:Null}"/>
        <Setter Property="Background"
            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Width"
            Value="21"/>
        <Setter Property="Height"
            Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas>
                        <!-- Fill Background Area including base border -->
                        <Path Fill="{TemplateBinding Background}"
                  Data="M 21 11 L 21 0 L 6 0 L 0 5 L 0 6 L 6 11 z"/>
                        <!-- TopTip/Top OuterLine -->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 20 0.5 L 5.5 0.5 L 0.5 5 L 0.5 5.5 "/>
                        <!-- Right/Bottom/BottomTip OuterLine -->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 0.5 5.5 L 0.5 6 L 5.5 10.5 L 20.5 10.5 L 20.5 0 "/>
                        <!-- TopTip/Top InnerLine -->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 19 1.5 L 5.5 1.5 L 1.5 5 L 1.5 5.5 "/>
                        <!-- Right/Bottom/BottomTip InnerLine-->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 1.5 5.5 L 1.5 6 L 5.5 9.5 L 19.5 9.5 L 19.5 1.0 "/>
                        <!-- Fill Inner Area -->
                        <Path Fill="{TemplateBinding Foreground}"
                  Opacity="0.5"
                  Data="M 19 9 L 19 2 L 6 2 L 2 5.5 L 6 9 z"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging"
                     Value="true">
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                     Value="false">
                            <Setter Property="Foreground"
                      Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalSliderRightThumbStyle"
         TargetType="{x:Type Thumb}">
        <Setter Property="BorderThickness"
            Value="0,0,0,0"/>
        <Setter Property="Foreground"
            Value="{x:Null}"/>
        <Setter Property="Background"
            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="Width"
            Value="21"/>
        <Setter Property="Height"
            Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Canvas>

                        <!-- Fill Background Area including base border -->
                        <Path Fill="{TemplateBinding Background}"
                  Data="M 0 11 L 0 0 L 15 0 L 21 5 L 21 6 L 15 11 z"/>

                        <!-- Left/Top/TopTip OuterLine -->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 0.5 10 L 0.5 0.5 L 15.5 0.5 L 20.5 5 L 20.5 5.5 "/>

                        <!-- Bottom/BottomTip OuterLine -->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 20.5 5.5 L 20.5 6 L 15.5 10.5 L 0 10.5 "/>

                        <!-- Left/Top/TopTip InnerLine -->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlLightBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 1.5 9 L 1.5 1.5 L 15.5 1.5 L 19.5 5 L 19.5 5.5 "/>

                        <!-- Bottom/BottomTip InnerLine -->
                        <Path Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                  StrokeThickness="1.0"
                  Data="M 19.5 5.5 L 19.5 6 L 15.5 9.5 L 1 9.5 "/>

                        <!-- Fill Inner Area -->
                        <Path Fill="{TemplateBinding Foreground}"
                  Opacity="0.5"
                  Data="M 2 9 L 2 2 L 15 2 L 19 5.5 L 15 9 "/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="{x:Type customControls:SpectrumSlider}"
             TargetType="{x:Type customControls:SpectrumSlider}">
        <Setter Property="Orientation"
            Value="Vertical"/>
        <Setter Property="Stylus.IsPressAndHoldEnabled"
            Value="false"/>
        <Setter Property="Background"
            Value="Transparent"/>
        <Setter Property="Foreground"
            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Minimum"
            Value="0"/>
        <Setter Property="Maximum" Value="100"/>
        <Setter Property="TickFrequency"
            Value="0.001" />
        <Setter Property="IsSnapToTickEnabled"
            Value="True" />
        <Setter Property="IsDirectionReversed" Value="False" />
        <Setter Property="Value" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:SpectrumSlider}">
                    <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  Height="{TemplateBinding Height}">
                        <Grid>


                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"
                  MinWidth="{TemplateBinding Slider.MinWidth}"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <Border x:Name="PART_TrackBackground"
                Grid.Column="1" Width="20" Margin="10,0,10,0">
                                <Rectangle x:Name="PART_SpectrumDisplay"
                  Stretch="Fill" VerticalAlignment="Stretch" />
                                <Border.BitmapEffect>
                                    <BevelBitmapEffect BevelWidth="3"
                    EdgeProfile="BulgedUp" Relief="0.3" />
                                </Border.BitmapEffect>
                            </Border>


                            <Canvas Grid.Column="1"
                      HorizontalAlignment="Center"
                      Width="4">
                                <Rectangle x:Name="PART_SelectionRange"
                  Canvas.Left="1"
                  Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                  Width="2.0"
                  Visibility="Hidden" />
                            </Canvas>

                            <Track Grid.Column="1" Name="PART_Track">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                Command="Slider.DecreaseLarge"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                    Command="Slider.IncreaseLarge"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <customControls:ColorThumb 
                    x:Name="Thumb"
                    Height="20"
                    ThumbColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- Display SelectionRange background -->
                        <Trigger Property="IsSelectionRangeEnabled" Value="True">
                            <Setter TargetName="PART_SelectionRange"
                 Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="Width" Value="Auto">
                            <Setter Property="MinWidth" Value="21"/>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="104"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!-- End Spectrum Slider -->

</ResourceDictionary>
